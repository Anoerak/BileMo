{
    "openapi": "3.0.0",
    "info": {
        "title": "BileMo API",
        "description": "**The best API for mobile phones**.<br \/>  To get your token, unfold the **POST** ~~\/api\/login_check~~ section, click on _'Try it out'_ then 'Execute.<br \/>  In the Response body, copy the string from _'token'_.<br \/> Back to the top of the page, click on _'Authorize'_ and in the input field type **'bearer'** + **space** + **'THE_STRING_YOU'VE_COPIED'**.<br \/> You can now use the API :)\n",
        "version": "1.0.0"
    },
    "paths": {
        "\/api\/login_check": {
            "post": {
                "tags": [
                    "Token"
                ],
                "summary": "Great you a token in order to get logged.",
                "operationId": "postCredentialsItem",
                "requestBody": {
                    "description": "Create a new JWT token",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Credentials"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Catch the JWT token",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Token"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/doc.json": {
            "get": {
                "responses": {
                    "default": {
                        "description": ""
                    }
                }
            }
        },
        "\/api\/customer": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "GET method to get all customers",
                "operationId": "get_app_customer",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of customer per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return all customers",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Customer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "POST method to create a customer",
                "operationId": "post_app_create_customer",
                "requestBody": {
                    "description": "Customer object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Customer"
                            },
                            "example": {
                                "name": "John Doe",
                                "email": "johndoa@lost.com",
                                "password": "password",
                                "users": [
                                    1,
                                    2
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Create a customer",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Customer"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/customer\/{id}": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "GET method to get one customer",
                "operationId": "get_app_detail_customer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The customer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return one customer",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Customer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Customer"
                ],
                "summary": "PUT method to update a customer",
                "operationId": "put_app_update_customer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The customer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Customer object that needs to be updated to the store",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Customer"
                            },
                            "example": {
                                "name": "John Wayne",
                                "email": "johnwayne@farwest.com",
                                "password": "password",
                                "users": [
                                    1,
                                    2
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update a customer",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Customer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customer"
                ],
                "summary": "DELETE method to delete a customer",
                "operationId": "delete_app_delete_customer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The customer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete a customer",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Customer"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/product": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "GET method to get all products",
                "operationId": "get_app_product",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of products per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return all products",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Product"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "POST method to create a product",
                "operationId": "post_app_create_product",
                "requestBody": {
                    "description": "Product object that needs to be added to the db",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Product"
                            },
                            "example": {
                                "name": "Product 1",
                                "description": "Description of product 1",
                                "price": "10.99",
                                "user": [
                                    1,
                                    2
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Create a product",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Product"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/product\/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "GET method to get one product",
                "operationId": "get_app_detail_product",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return one product",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Product"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "PUT method to update a user",
                "operationId": "put_app_update_product",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Product object that needs to be updated to the db",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Product"
                            },
                            "example": {
                                "name": "Product 1",
                                "description": "Description of product 1",
                                "price": "10.99",
                                "user": [
                                    1,
                                    2
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update a product",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Product"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "DELETE method to delete a product",
                "operationId": "delete_app_delete_product",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete a product",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Product"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "GET method to get all users",
                "operationId": "get_app_user",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of user per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return all users",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/User"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "POST method to create a user",
                "operationId": "post_app_create_user",
                "requestBody": {
                    "description": "User object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/User"
                            },
                            "example": {
                                "email": "email",
                                "password": "password",
                                "username": "username",
                                "customer": [
                                    1
                                ],
                                "products": [
                                    1,
                                    2
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Create a user",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/user\/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "GET method to get one user",
                "operationId": "get_app_detail_user",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return one user",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/User"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "PUT method to update a user",
                "operationId": "put_app_update_user",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User object that needs to be updated to the store",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/User"
                            },
                            "example": {
                                "email": "email",
                                "password": "password",
                                "username": "username",
                                "customer": [
                                    1
                                ],
                                "products": [
                                    1,
                                    2
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update a user",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/User"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "DELETE method to delete a customer",
                "operationId": "delete_app_delete_user",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete a user",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Token": {
                "properties": {
                    "token": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Credentials": {
                "properties": {
                    "username": {
                        "type": "string",
                        "default": "admin@example.com"
                    },
                    "password": {
                        "type": "string",
                        "default": "password"
                    }
                },
                "type": "object"
            },
            "Customer": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "email": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "object",
                        "additionalProperties": true
                    },
                    "password": {
                        "title": "The hashed password",
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/User"
                        }
                    },
                    "_links": {
                        "properties": {
                            "getAll": {
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "get": {
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "delete": {
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "update": {
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "app_create": {
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Product": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "price": {
                        "type": "string"
                    },
                    "user": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/User"
                        }
                    },
                    "comments": {
                        "type": "string"
                    },
                    "_links": {
                        "properties": {
                            "getAll": {
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "getOne": {
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "delete": {
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "update": {
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "create": {
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "title": "The hashed password",
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Product"
                        }
                    },
                    "customer": {
                        "$ref": "#\/components\/schemas\/Customer"
                    },
                    "_links": {
                        "properties": {
                            "getAll": {
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "getOne": {
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "delete": {
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "update": {
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "create": {
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "readOnly": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ]
}
